{"ast":null,"code":"import axios from 'axios';\nexport const authStart = () => {\n  return {\n    type: 'auth_start'\n  };\n};\nexport const authSuccess = (token, userId) => {\n  return {\n    type: 'auth_success',\n    myToken: token,\n    myId: userId\n  };\n};\nexport const authFail = (err, authmode) => {\n  return {\n    type: 'auth_fail',\n    error: err,\n    authmode: authmode\n  };\n};\nexport const authLogin = (uname, pwd, authmode) => {\n  return dispatch => {\n    dispatch(authStart());\n    let url = 'http://localhost:8080/auth/authenticate';\n    let data = {\n      uname: uname,\n      pwd: pwd\n    };\n\n    switch (authmode) {\n      case 'login':\n        url = 'http://localhost:8080/auth/authenticate';\n        data = {\n          uname: uname,\n          pwd: pwd\n        };\n        break;\n\n      case 'signup':\n        url = 'http://localhost:8080/auth/signup';\n        data = {\n          username: uname,\n          password: pwd\n        };\n        break;\n\n      default:\n        break;\n    }\n\n    axios.post(url, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log(response);\n      dispatch(authSuccess(response.data.token, response.data.userid));\n    }).catch(err => {\n      console.log(\"auth fail...\");\n      dispatch(authFail(err, authmode));\n    });\n  };\n};\nexport const logout = () => {\n  return {\n    type: 'auth_logout'\n  };\n};\nexport const authCheckState = () => {\n  return dispatch => {\n    const token = localStorage.getItem('token');\n\n    if (!token) {\n      dispatch(logout());\n    } else {\n      let authURL = 'http://localhost:8080/auth/authGetId';\n      let config = {\n        headers: {\n          Authorization: 'Bearer ' + token\n        }\n      };\n      axios.get(authURL, config).then(response => {\n        console.log(response);\n        dispatch(authSuccess(token, response.data));\n      }).catch(err => {\n        console.log(err);\n        dispatch(logout());\n      }); // test\n\n      let testURL = 'http://localhost:8080/auth/test';\n      axios.get(testURL, config).then(response => {\n        console.log('======= responseEntity Test =======');\n        console.log(response);\n        console.log('======= responseEntity Test =======');\n        console.log('==================================');\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n};","map":{"version":3,"sources":["D:/ItlizeDocs/project2/project2_fe/src/store/actions/auth.js"],"names":["axios","authStart","type","authSuccess","token","userId","myToken","myId","authFail","err","authmode","error","authLogin","uname","pwd","dispatch","url","data","username","password","post","headers","then","response","console","log","userid","catch","logout","authCheckState","localStorage","getItem","authURL","config","Authorization","get","testURL"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: 'auth_start'\r\n    }\r\n}\r\n\r\nexport const authSuccess = (token, userId) => {\r\n    return {\r\n        type:'auth_success',\r\n        myToken: token,\r\n        myId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (err,authmode) => {\r\n    return {\r\n        type: 'auth_fail',\r\n        error:err,\r\n        authmode: authmode,\r\n    }\r\n}\r\n\r\nexport const authLogin = (uname, pwd, authmode) => {\r\n    return dispatch => {\r\n        dispatch(authStart());\r\n        let url='http://localhost:8080/auth/authenticate';\r\n        let data = {uname: uname, pwd: pwd};\r\n\r\n        switch (authmode) {\r\n            case 'login':\r\n                url='http://localhost:8080/auth/authenticate';\r\n                data = {uname: uname, pwd: pwd};\r\n                break;\r\n            case 'signup':\r\n                url='http://localhost:8080/auth/signup';\r\n                data = {username: uname, password: pwd};\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        \r\n        axios.post(url,data,{headers:{'Content-Type':'application/json'}}).then(\r\n        response => {\r\n            console.log(response);\r\n            dispatch(authSuccess(response.data.token, response.data.userid));\r\n        }).catch(\r\n            err => {\r\n                console.log(\"auth fail...\");\r\n                dispatch(authFail(err,authmode));\r\n            }\r\n        );\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return {\r\n        type: 'auth_logout'\r\n    };\r\n}\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        if(!token){\r\n            dispatch(logout());\r\n        } else {\r\n            let authURL = 'http://localhost:8080/auth/authGetId';\r\n            let config = {\r\n                headers: {\r\n                    Authorization: 'Bearer '+token\r\n                }\r\n            }\r\n            axios.get(authURL, config).then(\r\n                response => {\r\n                    console.log(response);\r\n                    dispatch(authSuccess(token,response.data));\r\n                }\r\n            ).catch(\r\n                err => {\r\n                    console.log(err);\r\n                    dispatch(logout());\r\n                }\r\n            );\r\n\r\n            // test\r\n            let testURL = 'http://localhost:8080/auth/test';\r\n            axios.get(testURL, config)\r\n                .then(\r\n                    response => {\r\n                        console.log('======= responseEntity Test =======');\r\n                        console.log(response);\r\n                        \r\n                        console.log('======= responseEntity Test =======');\r\n                        console.log('==================================');\r\n\r\n                    }\r\n                )\r\n                .catch(\r\n                    err => {\r\n                        console.log(err);\r\n                    }\r\n                );\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}