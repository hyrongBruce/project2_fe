{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItlizeDocs\\\\project2\\\\project2_fe\\\\src\\\\components\\\\UserAvatar\\\\UserAvatar.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport './UserAvatar.css';\nimport * as actions from '../../store/actions/Index';\nimport { OverlayPanel } from 'primereact/overlaypanel';\nimport User from '../../containers/User';\n\nclass Useravatar extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.clickDivHandler = () => {\n      console.log('avatar clicked...');\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUserInfo();\n  }\n\n  render() {\n    let avatarURL = this.props.avatarURL;\n    if (!avatarURL) avatarURL = 'avatar_def.png';\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"myAvatarLayout\",\n      style: {\n        height: this.props.height\n      } // onClick={this.clickDivHandler}>\n      ,\n      onClick: e => this.op.toggle(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"myAvatarName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"myAvatarName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, this.props.avatarName), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-caret-down\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: 'http://localhost:8080/res/avatar?avatarlocation=' + avatarURL,\n      alt: \"useravatar\",\n      height: parseInt(this.props.height) - 10,\n      style: {\n        borderRadius: \"50%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(OverlayPanel, {\n      ref: el => this.op = el,\n      className: \"myPopupOverlay\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(User, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  avatarURL: state.user.userInfo.avatarlocation,\n  avatarName: state.user.userInfo.username\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getUserInfo: () => actions.getUserInfo()(dispatch)\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Useravatar);","map":{"version":3,"sources":["D:/ItlizeDocs/project2/project2_fe/src/components/UserAvatar/UserAvatar.js"],"names":["React","connect","actions","OverlayPanel","User","Useravatar","Component","clickDivHandler","console","log","componentDidMount","props","getUserInfo","render","avatarURL","height","e","op","toggle","avatarName","parseInt","borderRadius","el","mapStateToProps","state","user","userInfo","avatarlocation","username","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAO,kBAAP;AACA,OAAO,KAAKC,OAAZ,MAAyB,2BAAzB;AACA,SAASC,YAAT,QAA6B,yBAA7B;AACA,OAAOC,IAAP,MAAiB,uBAAjB;;AAGA,MAAMC,UAAN,SAAyBL,KAAK,CAACM,SAA/B,CAAyC;AAAA;AAAA;;AAAA,SAMrCC,eANqC,GAMnB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,KARoC;AAAA;;AAErCC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,KAAL,CAAWC,WAAX;AACH;;AAMDC,EAAAA,MAAM,GAAE;AACJ,QAAIC,SAAS,GAAG,KAAKH,KAAL,CAAWG,SAA3B;AACA,QAAG,CAACA,SAAJ,EAAeA,SAAS,GAAC,gBAAV;AACf,wBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWI;AAApB,OAAvC,CACA;AADA;AAEI,MAAA,OAAO,EAAEC,CAAC,IAAE,KAAKC,EAAL,CAAQC,MAAR,CAAeF,CAAf,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA6B,KAAKL,KAAL,CAAWQ,UAAxC,CADJ,eAEI;AAAG,MAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAHJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,GAAG,EAAE,qDAAmDL,SAA7D;AACI,MAAA,GAAG,EAAC,YADR;AACqB,MAAA,MAAM,EAAEM,QAAQ,CAAC,KAAKT,KAAL,CAAWI,MAAZ,CAAR,GAA4B,EADzD;AAEI,MAAA,KAAK,EAAE;AAACM,QAAAA,YAAY,EAAE;AAAf,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAPJ,CADJ,eAeI,oBAAC,YAAD;AAAc,MAAA,GAAG,EAAGC,EAAD,IAAQ,KAAKL,EAAL,GAAUK,EAArC;AACI,MAAA,SAAS,EAAC,gBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEQ,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CAfJ,CAFJ;AAuBH;;AApCoC;;AAyCzC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAChCV,EAAAA,SAAS,EAAEU,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,cADC;AAEhCR,EAAAA,UAAU,EAAEK,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBE;AAFA,CAAZ,CAAxB;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,KAAK;AACpClB,EAAAA,WAAW,EAAE,MAAMV,OAAO,CAACU,WAAR,GAAsBkB,QAAtB;AADiB,CAAL,CAAnC;;AAIA,eAAe7B,OAAO,CAACsB,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CxB,UAA7C,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport './UserAvatar.css';\r\nimport * as actions from '../../store/actions/Index';\r\nimport { OverlayPanel } from 'primereact/overlaypanel';\r\nimport User from '../../containers/User';\r\n\r\n\r\nclass Useravatar extends React.Component {\r\n    \r\n    componentDidMount(){\r\n        this.props.getUserInfo();\r\n    }\r\n\r\n    clickDivHandler = () => {\r\n        console.log('avatar clicked...')\r\n    }\r\n\r\n    render(){\r\n        let avatarURL = this.props.avatarURL;\r\n        if(!avatarURL) avatarURL='avatar_def.png';\r\n        return (\r\n            \r\n            <div>\r\n                <div className=\"myAvatarLayout\" style={{height: this.props.height}}\r\n                // onClick={this.clickDivHandler}>\r\n                    onClick={e=>this.op.toggle(e)}>\r\n                    <div className=\"myAvatarName\">\r\n                        <p className=\"myAvatarName\">{this.props.avatarName}</p>\r\n                        <i className=\"pi pi-caret-down\"></i>\r\n                    </div>\r\n                    <div>\r\n                        <img src={'http://localhost:8080/res/avatar?avatarlocation='+avatarURL} \r\n                            alt=\"useravatar\" height={parseInt(this.props.height)-10}\r\n                            style={{borderRadius: \"50%\"}}></img>\r\n                    </div>\r\n\r\n                </div>\r\n                <OverlayPanel ref={(el) => this.op = el}\r\n                    className=\"myPopupOverlay\">\r\n                        <User></User>\r\n                </OverlayPanel>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    avatarURL: state.user.userInfo.avatarlocation,\r\n    avatarName: state.user.userInfo.username,\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getUserInfo: () => actions.getUserInfo()(dispatch),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Useravatar)\r\n"]},"metadata":{},"sourceType":"module"}