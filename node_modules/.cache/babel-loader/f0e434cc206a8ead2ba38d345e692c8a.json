{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItlizeDocs\\\\project2\\\\project2_fe\\\\src\\\\containers\\\\ShoppingList.js\";\nimport React, { Component } from 'react';\nimport { Route, NavLink, Switch, withRouter, Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport LayoutShopping from '../components/Layout/LayoutShopping';\nimport * as actions from '../store/actions/Index';\nimport './ShoppingList.css';\nimport Dropdown_Breadcrumb from '../components/Dropdown/breadcrumb-dropdown';\nimport { Checkbox, Button } from '@material-ui/core';\nimport { ScrollPanel } from 'primereact/scrollpanel';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'; // import Link from '@material-ui/core/Link';\n\nimport Typography from '@material-ui/core/Typography';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow'; // import {TabMenu} from 'primereact/tabmenu';\n\nclass ShoppingList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      redirectTo: null\n    };\n    this.navigateheader = /*#__PURE__*/React.createElement(Breadcrumbs, {\n      separator: /*#__PURE__*/React.createElement(NavigateNextIcon, {\n        fontSize: \"small\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 33\n        }\n      }),\n      \"aria-label\": \"breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      color: \"primary\",\n      to: \"/search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, \"Mechanical\"), /*#__PURE__*/React.createElement(Typography, {\n      color: \"textPrimary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    }, \"HVAC Fans\"));\n\n    this.clickonavatar = () => {\n      console.log('click on avatar');\n    };\n\n    this.handleRedirect = () => {\n      this.setState({\n        redirectTo: '/shopping/compare'\n      });\n    };\n\n    this.handleRedirectToDetail = pid => {\n      console.log(pid);\n      this.setState({\n        redirectTo: {\n          pathname: '/shopping/details',\n          state: {\n            pid: pid\n          }\n        }\n      });\n    };\n\n    this.compareCheckboxHandler = (event, productid) => {\n      this.props.changeComparedProduct(productid);\n    };\n\n    this.findIsCompared = pid => {\n      let result = this.props.comparedProductId.find(eleid => eleid === pid);\n      if (!result) return false;else return true;\n    };\n  }\n\n  componentDidMount() {\n    this.props.getProductList();\n  }\n\n  render() {\n    let productpages = [];\n    let displayed = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }\n    }, \"Nothing choosed...\");\n\n    if (this.props.receiveState === 'success') {\n      for (let i = 0; i < this.props.products.length; i++) {\n        let properties = [];\n        let key = this.props.generalType[0];\n        key = this.props.generalType[1];\n        let comments = [' CFM', ' W at max speed', ' dBA at max speed', '\" fan sweep diameter'];\n        let com_index = 0;\n        let midAreaGray = [];\n\n        for (let key_item in this.props.items[key]) {\n          let curitem = this.props.items[key][key_item];\n          midAreaGray.push( /*#__PURE__*/React.createElement(\"p\", {\n            className: \"ProductProperties-gray\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }\n          }, this.props.products[i][curitem.id], comments[com_index]));\n          com_index++;\n        }\n\n        properties.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ProductProperties-gray\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 21\n          }\n        }, midAreaGray));\n        key = this.props.generalType[2];\n        let redAreaDiv = [];\n        redAreaDiv.push( /*#__PURE__*/React.createElement(\"p\", {\n          className: \"ProductProperties-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 21\n          }\n        }, key.replace('_', ' ') + ': '));\n        let redAreaText = [];\n\n        for (let key_item in this.props.items[key]) {\n          let curitem = this.props.items[key][key_item];\n          redAreaText.push(this.props.products[i][curitem.id] + ' ' + curitem.title);\n        }\n\n        redAreaDiv.push( /*#__PURE__*/React.createElement(\"p\", {\n          className: \"ProductProperties-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 21\n          }\n        }, redAreaText.join(' / ')));\n        properties.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ProductProperties-red\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }\n        }, redAreaDiv));\n        let producttitle = [];\n        let producttitlecontents = [this.props.products[i].manufacturer, this.props.products[i].productname + ' ' + this.props.products[i].series, this.props.products[i].model];\n\n        for (let curtitle of producttitlecontents) producttitle.push( /*#__PURE__*/React.createElement(\"p\", {\n          className: \"ProductTitle\",\n          onClick: event => this.handleRedirectToDetail(this.props.products[i].productid),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }\n        }, curtitle));\n\n        let operateZone = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"operateZone\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"operateZone-Text\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"checkbox\",\n          id: 'checkbox' + this.props.products[i].productid,\n          style: {\n            verticalAlign: 'middle'\n          },\n          onChange: event => this.compareCheckboxHandler(event, this.props.products[i].productid),\n          checked: this.findIsCompared(this.props.products[i].productid),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          className: \"operateZoneText\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }\n        }, \"Compare\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"operateZone-ButtonDiv\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"operateZone-Button\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }\n        }, \"Add to\")));\n        productpages.push( /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ProductListBox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: 'http://localhost:8080/res/product?productlocation=' + this.props.products[i].imagelocation,\n          className: \"ProductImage\",\n          alt: \"product\",\n          height: \"110\",\n          width: \"150\",\n          style: {\n            marginTop: '2px'\n          },\n          onClick: event => this.handleRedirectToDetail(this.props.products[i].productid),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"ProductTitle\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 25\n          }\n        }, producttitle), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }\n        }, properties), /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }\n        }, operateZone)));\n      }\n\n      displayed = /*#__PURE__*/React.createElement(\"div\", {\n        className: \"ProductListZoneBox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 17\n        }\n      }, productpages);\n    } else if (this.props.receiveState === 'process') {\n      displayed = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"pi pi-spinner pi-spin\",\n        style: {\n          fontSize: '5rem'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }\n      }));\n    }\n\n    let redirectOption = [];\n\n    if (this.state.redirectTo !== null) {\n      redirectOption = /*#__PURE__*/React.createElement(Redirect, {\n        to: this.state.redirectTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 17\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 13\n      }\n    }, redirectOption, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"Breadcrumb\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        minWidth: '220px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, this.navigateheader), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleRedirect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \"To Compare\"))), /*#__PURE__*/React.createElement(ScrollPanel, {\n      style: {\n        width: '100%',\n        height: '600px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 17\n      }\n    }, displayed));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  logStatus: state.auth.logStatus,\n  userId: state.auth.userId,\n  token: state.auth.token,\n  items: state.filter.sideitems,\n  generalType: state.filter.GeneralTypes,\n  products: state.product.displayedProductListAfterSearch,\n  receiveState: state.product.receiveState,\n  comparedProductId: state.product.comparedProductId\n});\n\nconst mapDispatchToProps = dispatch => ({\n  getProductList: () => actions.getProductList()(dispatch),\n  changeComparedProduct: productid => dispatch({\n    type: 'product_compare_change',\n    productid: productid\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingList);","map":{"version":3,"sources":["D:/ItlizeDocs/project2/project2_fe/src/containers/ShoppingList.js"],"names":["React","Component","Route","NavLink","Switch","withRouter","Redirect","Link","connect","LayoutShopping","actions","Dropdown_Breadcrumb","Checkbox","Button","ScrollPanel","Breadcrumbs","Typography","NavigateNextIcon","ClearIcon","MenuItem","MenuList","ClickAwayListener","Grow","ShoppingList","state","redirectTo","navigateheader","clickonavatar","console","log","handleRedirect","setState","handleRedirectToDetail","pid","pathname","compareCheckboxHandler","event","productid","props","changeComparedProduct","findIsCompared","result","comparedProductId","find","eleid","componentDidMount","getProductList","render","productpages","displayed","receiveState","i","products","length","properties","key","generalType","comments","com_index","midAreaGray","key_item","items","curitem","push","id","redAreaDiv","replace","redAreaText","title","join","producttitle","producttitlecontents","manufacturer","productname","series","model","curtitle","operateZone","verticalAlign","imagelocation","marginTop","fontSize","redirectOption","minWidth","width","height","mapStateToProps","logStatus","auth","userId","token","filter","sideitems","GeneralTypes","product","displayedProductListAfterSearch","mapDispatchToProps","dispatch","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Route, NavLink, Switch, withRouter, Redirect, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport LayoutShopping from '../components/Layout/LayoutShopping';\r\nimport * as actions from '../store/actions/Index';\r\nimport './ShoppingList.css';\r\nimport Dropdown_Breadcrumb from '../components/Dropdown/breadcrumb-dropdown';\r\n\r\nimport { Checkbox, Button } from '@material-ui/core';\r\nimport {ScrollPanel} from 'primereact/scrollpanel';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs'\r\n// import Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport MenuList from '@material-ui/core/MenuList';\r\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\r\nimport Grow from '@material-ui/core/Grow';\r\n\r\n// import {TabMenu} from 'primereact/tabmenu';\r\n\r\nclass ShoppingList extends Component{\r\n\r\n    state = {\r\n        redirectTo: null,\r\n    }\r\n\r\n    \r\n    // navigateitems = [\r\n    //     {label: 'HVAC Fans'},\r\n    // ];\r\n    // navigatehome = {\r\n    //     icon: 'pi pi-home', url: '/search'\r\n    // }\r\n    navigateheader = (\r\n        <Breadcrumbs separator={<NavigateNextIcon fontSize=\"small\" />} aria-label=\"breadcrumb\">\r\n            \r\n            <Link color=\"primary\" to=\"/search\">\r\n                Mechanical\r\n            </Link>\r\n            <Typography color=\"textPrimary\" >\r\n                    HVAC Fans \r\n            </Typography>\r\n        </Breadcrumbs>\r\n    )\r\n\r\n    clickonavatar = () => {\r\n        console.log('click on avatar');\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.getProductList();\r\n    }\r\n\r\n    handleRedirect = () => {\r\n        this.setState({redirectTo: '/shopping/compare'});\r\n    }\r\n\r\n    handleRedirectToDetail = (pid) => {\r\n        console.log(pid);\r\n        this.setState({redirectTo: {pathname: '/shopping/details', state: {pid: pid}}});\r\n    }\r\n\r\n    compareCheckboxHandler = (event, productid) => {\r\n        this.props.changeComparedProduct(productid);\r\n    }\r\n\r\n    findIsCompared = (pid) => {\r\n        let result = (this.props.comparedProductId.find(eleid => eleid === pid));\r\n        if(!result)\r\n            return false;\r\n        else\r\n            return true;\r\n    }\r\n\r\n    \r\n\r\n    render(){\r\n        let productpages = [];\r\n        let displayed = (\r\n            <div>\r\n                Nothing choosed...\r\n            </div>\r\n        );\r\n\r\n        if(this.props.receiveState === 'success') \r\n        {\r\n            \r\n            for(let i=0;i<this.props.products.length;i++)\r\n            {\r\n                let properties = [];\r\n                let key=this.props.generalType[0];\r\n               \r\n\r\n                key=this.props.generalType[1];\r\n                let comments=[' CFM',\r\n                    ' W at max speed',\r\n                    ' dBA at max speed',\r\n                    '\" fan sweep diameter'\r\n                ];\r\n                let com_index=0;\r\n                let midAreaGray = [];\r\n                for(let key_item in this.props.items[key]){\r\n                    let curitem = this.props.items[key][key_item];\r\n                    midAreaGray.push(\r\n                        <p className=\"ProductProperties-gray\">\r\n                            {this.props.products[i][curitem.id]}\r\n                            {comments[com_index]}    \r\n                        </p>\r\n                    );\r\n                    com_index++;\r\n                }\r\n                properties.push(\r\n                    <div className=\"ProductProperties-gray\">\r\n                        {midAreaGray}\r\n                    </div>\r\n                )\r\n\r\n                key=this.props.generalType[2];\r\n                let redAreaDiv = [];\r\n                redAreaDiv.push(\r\n                    <p className=\"ProductProperties-red\">\r\n                        {key.replace('_',' ')+': '}\r\n                    </p>\r\n                );\r\n                let redAreaText = [];\r\n                for(let key_item in this.props.items[key]){\r\n                    let curitem = this.props.items[key][key_item];\r\n                    redAreaText.push(this.props.products[i][curitem.id]+' '+curitem.title);\r\n                }\r\n                redAreaDiv.push(\r\n                    <p className=\"ProductProperties-red\">\r\n                        {redAreaText.join(' / ')}\r\n                    </p>\r\n                )\r\n                properties.push(\r\n                    <div className=\"ProductProperties-red\">\r\n                        {redAreaDiv}\r\n                    </div>\r\n                )\r\n\r\n                let producttitle = [];\r\n                let producttitlecontents = [\r\n                    this.props.products[i].manufacturer,\r\n                    this.props.products[i].productname+' '+this.props.products[i].series,\r\n                    this.props.products[i].model\r\n                ]   \r\n                for(let curtitle of producttitlecontents)\r\n                    producttitle.push(\r\n                        <p className=\"ProductTitle\"\r\n                            onClick={(event) => this.handleRedirectToDetail(this.props.products[i].productid)}>\r\n                            {curtitle}\r\n                        </p>  \r\n                    );\r\n\r\n                let operateZone=(\r\n                    <div className=\"operateZone\">\r\n                        <div className=\"operateZone-Text\">\r\n                            <input type=\"checkbox\" \r\n                                id={'checkbox'+this.props.products[i].productid}\r\n                                style={{verticalAlign: 'middle'}}\r\n                                onChange={event => this.compareCheckboxHandler(event, this.props.products[i].productid)}\r\n                                checked={this.findIsCompared(this.props.products[i].productid)}\r\n                                />\r\n                            <span className=\"operateZoneText\">Compare</span>\r\n                        </div>\r\n                        <div className=\"operateZone-ButtonDiv\">\r\n                            <button className=\"operateZone-Button\">Add to</button>\r\n                        </div>\r\n                    </div>\r\n                );\r\n\r\n\r\n                productpages.push(\r\n                    <div className=\"ProductListBox\" >\r\n                        <img src={'http://localhost:8080/res/product?productlocation='+this.props.products[i].imagelocation} \r\n                            className = \"ProductImage\"\r\n                            alt=\"product\" height='110' width='150' style={{marginTop:'2px'}}\r\n                            onClick={(event) => this.handleRedirectToDetail(this.props.products[i].productid)}\r\n                            />\r\n                        <div className=\"ProductTitle\">\r\n                            {producttitle}\r\n                        </div>\r\n                        <div>\r\n                            {properties}\r\n                        </div>\r\n                        <div>\r\n                            {operateZone}\r\n                        </div>\r\n                   </div>\r\n                )\r\n            }\r\n            displayed = (\r\n                <div className=\"ProductListZoneBox\">\r\n                    {productpages}\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        if(this.props.receiveState === 'process'){\r\n            displayed = (\r\n                <div>\r\n                    <i className=\"pi pi-spinner pi-spin\" style={{fontSize:'5rem'}}></i>\r\n                </div>\r\n            );\r\n        }\r\n\r\n        let redirectOption = [];\r\n\r\n        if(this.state.redirectTo !== null){\r\n            redirectOption = (\r\n                <Redirect to={this.state.redirectTo}></Redirect>\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {redirectOption}\r\n                <header className=\"Breadcrumb\">\r\n                    {/* <BreadCrumb model={this.navigateitems} home={this.navigatehome}\r\n                        style={{borderColor: 'transparent'}}\r\n                        /> */}\r\n                    <div style={{minWidth: '220px'}}>\r\n                        {this.navigateheader}\r\n                    </div>\r\n                    <div>\r\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleRedirect}>\r\n                            To Compare\r\n                        </Button>\r\n                    </div>\r\n                </header>\r\n                <ScrollPanel style={{width:'100%', height: '600px'}}>\r\n                    {displayed}\r\n                </ScrollPanel>\r\n                \r\n                {/* <div>\r\n                    <RangeSlider></RangeSlider>\r\n                </div> */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n    logStatus: state.auth.logStatus,\r\n    userId: state.auth.userId,\r\n    token: state.auth.token,\r\n\r\n    items: state.filter.sideitems,\r\n    generalType: state.filter.GeneralTypes,\r\n    products: state.product.displayedProductListAfterSearch,\r\n\r\n    receiveState: state.product.receiveState,\r\n    \r\n    comparedProductId: state.product.comparedProductId,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    getProductList: () => actions.getProductList()(dispatch),\r\n    changeComparedProduct: (productid) => dispatch({type: 'product_compare_change', productid: productid}),\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingList)\r\n"]},"metadata":{},"sourceType":"module"}