{"ast":null,"code":"var _jsxFileName = \"D:\\\\ItlizeDocs\\\\project2\\\\project2_fe\\\\src\\\\containers\\\\SearchIndex\\\\SearchIndex.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete } from 'primereact/autocomplete';\nimport './SearchIndex.css';\nimport { Dropdown } from 'primereact/dropdown';\nimport { Redirect } from 'react-router-dom';\nexport class SearchIndex extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ProductCategory: ['Mechanical'],\n      ProductType: ['HVAC Fans'],\n      ProductTypeSuggestion: [null],\n      inputContent: '',\n      inputCategory: 'Mechanical',\n      pageStatus: 'init'\n    };\n\n    this.suggestionHandler = event => {\n      let results = this.state.ProductType.filter(producttype => {\n        return producttype.toLowerCase().startsWith(event.query.toLowerCase());\n      });\n      this.setState({\n        ProductTypeSuggestion: results\n      });\n    };\n\n    this.clickHandler = event => {\n      if (this.state.ProductType[0].toLowerCase().startsWith(this.state.inputContent.toLowerCase())) this.setState({\n        pageStatus: 'HVAC_Fans'\n      }); // console.log('match');\n    };\n  }\n\n  render() {\n    let displayed = [];\n    let inputCategoryItems = [];\n\n    for (let ele of this.state.ProductCategory) {\n      inputCategoryItems.push({\n        label: ele,\n        value: ele\n      });\n    }\n\n    displayed = /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"SearchIndex-Area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(AutoComplete, {\n      value: this.state.inputContent,\n      onChange: event => this.setState({\n        inputContent: event.value\n      }),\n      completeMethod: event => this.suggestionHandler(event),\n      suggestions: this.state.ProductTypeSuggestion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"i\", {\n      className: \"pi pi-search SearchButton\",\n      onClick: this.clickHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Dropdown, {\n      value: this.state.inputCategory,\n      options: inputCategoryItems // className=\"Dropdown\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }))));\n    if (this.state.pageStatus === 'HVAC_Fans') displayed = /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/shopping\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }); // localStorage.setItem('urlstatus', this.state.pageStatus);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, displayed);\n  }\n\n}\n\nconst mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchIndex);","map":{"version":3,"sources":["D:/ItlizeDocs/project2/project2_fe/src/containers/SearchIndex/SearchIndex.js"],"names":["React","Component","connect","AutoComplete","Dropdown","Redirect","SearchIndex","state","ProductCategory","ProductType","ProductTypeSuggestion","inputContent","inputCategory","pageStatus","suggestionHandler","event","results","filter","producttype","toLowerCase","startsWith","query","setState","clickHandler","render","displayed","inputCategoryItems","ele","push","label","value","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {AutoComplete} from 'primereact/autocomplete';\r\nimport './SearchIndex.css';\r\nimport {Dropdown} from 'primereact/dropdown';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nexport class SearchIndex extends Component {\r\n    state = {\r\n        ProductCategory: [\r\n            'Mechanical'\r\n        ],\r\n        ProductType: [\r\n            'HVAC Fans'\r\n        ],\r\n        ProductTypeSuggestion: [\r\n            null\r\n        ]\r\n        ,\r\n        inputContent: '',\r\n        inputCategory: 'Mechanical',\r\n        pageStatus: 'init'\r\n    }  \r\n\r\n    render() {\r\n        let displayed = [];   \r\n        \r\n        let inputCategoryItems = [];\r\n\r\n        for(let ele of this.state.ProductCategory){\r\n            inputCategoryItems.push({label: ele, value: ele});\r\n        }\r\n\r\n        displayed= (\r\n            <div>\r\n                <div className=\"SearchIndex-Area\">\r\n                    <AutoComplete \r\n                        value={this.state.inputContent} \r\n                        onChange={(event) => this.setState({inputContent: event.value})}\r\n                        completeMethod={(event) => this.suggestionHandler(event)}\r\n                        suggestions={this.state.ProductTypeSuggestion}\r\n                        ></AutoComplete>                        \r\n                    <i className=\"pi pi-search SearchButton\" onClick={this.clickHandler}></i>\r\n                    <div>\r\n                        <Dropdown value={this.state.inputCategory}\r\n                            options= {inputCategoryItems}\r\n                            // className=\"Dropdown\"\r\n                        \r\n                        ></Dropdown>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n\r\n        if(this.state.pageStatus === 'HVAC_Fans' )\r\n            displayed = (\r\n                <Redirect to=\"/shopping\"></Redirect>\r\n            );\r\n\r\n        // localStorage.setItem('urlstatus', this.state.pageStatus);\r\n        \r\n        return (\r\n            <div>\r\n                {displayed}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    suggestionHandler = (event) => {\r\n        let results = this.state.ProductType.filter((producttype) => {\r\n            return producttype.toLowerCase().startsWith(event.query.toLowerCase());\r\n       });\r\n\r\n       this.setState({ ProductTypeSuggestion: results });\r\n    }\r\n\r\n    clickHandler = (event) => {\r\n        if(this.state.ProductType[0].toLowerCase().\r\n            startsWith(this.state.inputContent.toLowerCase()))\r\n            this.setState({pageStatus: 'HVAC_Fans'});\r\n            // console.log('match');\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    \r\n})\r\n\r\nconst mapDispatchToProps = {\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchIndex)\r\n"]},"metadata":{},"sourceType":"module"}